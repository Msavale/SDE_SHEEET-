#include <iostream>
#include <vector>
#include <unordered_map>

using namespace std;

void findSymmetricPairs(const vector<pair<int, int>>& pairs) {
    unordered_map<int, int> pairMap; // Key: second element of the pair, Value: first element of the pair

    for (const auto& p : pairs) {
        int first = p.first;
        int second = p.second;

        // Check if the reverse pair exists in the map
        auto it = pairMap.find(second);
        if (it != pairMap.end() && it->second == first) {
            cout << "(" << first << ", " << second << ")" << " and ";
            cout << "(" << second << ", " << first << ")" << endl;
        }

        // Add the current pair to the map
        pairMap[second] = first;
    }
}

int main() {
    vector<pair<int, int>> pairs = {{1, 2}, {3, 4}, {2, 1}, {5, 6}, {7, 8}, {8, 7}};

    cout << "Symmetric pairs in the array:" << endl;
    findSymmetricPairs(pairs);

    return 0;
}
