int minSubsetSumDifference(vector<int>& arr, int n)

{

  long long k=0;

  for(int i=0;i<n;i++){

    k+=arr[i];

  }

    vector<vector<bool>>dp(n+1,vector<bool>(k+1,0));

    for(int i=0;i<=n;i++){

      dp[i][0]=true;

    }

 

    dp[0][arr[0]]=true;

    for(int ind=1;ind<n;ind++){

      for(int target=1;target<=k;target++){

        bool notake=dp[ind-1][target];

        bool take=false;

        if(arr[ind]<=target){

          take=dp[ind-1][target-arr[ind]];

        }

        dp[ind][target]=(take || notake);

      }

    }

  int mini=INT_MAX;

  for(int i=0;i<=k/2;i++){

    if(dp[n-1][i]==true){

      int s1=i;

      int s2=k-i;

      mini=min(mini,abs(s1-s2));

    }

  }

  return mini;

}
