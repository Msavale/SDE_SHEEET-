#include <iostream>
#include <vector>
using namespace std;

void cycleSort(vector<int>& arr) {
    int n = arr.size();

    // Traverse array elements
    for (int start = 0; start <= n - 2; start++) {
        int item = arr[start];
        int pos = start;

        // Find position where we put the current item
        for (int i = start + 1; i < n; i++) {
            if (arr[i] < item)
                pos++;
        }

        // If item is already in correct position
        if (pos == start)
            continue;

        // Ignore duplicate elements
        while (item == arr[pos])
            pos++;

        // Swap
        if (pos != start) {
            swap(item, arr[pos]);
        }

        // Rotate the rest of the cycle
        while (pos != start) {
            pos = start;
            for (int i = start + 1; i < n; i++) {
                if (arr[i] < item)
                    pos++;
            }

            // Ignore duplicate elements
            while (item == arr[pos])
                pos++;

            // Swap
            if (item != arr[pos]) {
                swap(item, arr[pos]);
            }
        }
    }
}

int main() {
    int N;
    cout << "Enter the size of the array: ";
    cin >> N;

    vector<int> arr(N);
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < N; i++) {
        cin >> arr[i];
    }

    // Perform Cycle sort
    cycleSort(arr);

    // Print the sorted array
    cout << "Sorted array: ";
    for (int num : arr) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}
