#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

void pigeonholeSort(vector<int>& arr) {
    int n = arr.size();
    
    // Find minimum and maximum values in the array
    int min_val = *min_element(arr.begin(), arr.end());
    int max_val = *max_element(arr.begin(), arr.end());
    int range = max_val - min_val + 1;

    // Create pigeonhole vector to hold the counts
    vector<int> holes(range, 0);

    // Store the count of each element in the pigeonholes
    for (int i = 0; i < n; i++) {
        holes[arr[i] - min_val]++;
    }

    // Traverse through all the pigeonholes
    int index = 0;
    for (int i = 0; i < range; i++) {
        while (holes[i] > 0) {
            arr[index++] = i + min_val;
            holes[i]--;
        }
    }
}

int main() {
    int N;
    cout << "Enter the size of the array: ";
    cin >> N;

    vector<int> arr(N);
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < N; i++) {
        cin >> arr[i];
    }

    // Perform Pigeonhole sort
    pigeonholeSort(arr);

    // Print the sorted array
    cout << "Sorted array: ";
    for (int num : arr) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}
