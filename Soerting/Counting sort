#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

void countingSort(vector<int>& arr) {
    // Find the maximum element in the array
    int max_element = *max_element(arr.begin(), arr.end());

    // Create a count array to store the count of each element
    vector<int> count(max_element + 1, 0);

    // Store the count of each element in the count array
    for (int num : arr) {
        count[num]++;
    }

    // Modify the count array to store the actual position of each element
    for (int i = 1; i <= max_element; i++) {
        count[i] += count[i - 1];
    }

    // Create a temporary array to store the sorted elements
    vector<int> output(arr.size());

    // Build the output array
    for (int i = arr.size() - 1; i >= 0; i--) {
        output[count[arr[i]] - 1] = arr[i];
        count[arr[i]]--;
    }

    // Copy the sorted elements back to the original array
    for (int i = 0; i < arr.size(); i++) {
        arr[i] = output[i];
    }
}

int main() {
    int N;
    cout << "Enter the size of the array: ";
    cin >> N;

    vector<int> arr(N);
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < N; i++) {
        cin >> arr[i];
    }

    // Perform counting sort
    countingSort(arr);

    // Print the sorted array
    cout << "Sorted array: ";
    for (int num : arr) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}
