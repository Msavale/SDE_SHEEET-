int lengthOfLongestSubstring(const string& s) {
    int n = s.length();
    unordered_map<char, int> charIndex;
    int left = 0, maxLen = 0;

    for (int right = 0; right < n; ++right) {
        if (charIndex.find(s[right]) != charIndex.end()) {
            left = max(left, charIndex[s[right]] + 1);
        }
        charIndex[s[right]] = right;
        maxLen = max(maxLen, right - left + 1);
    }

    return maxLen;
}
